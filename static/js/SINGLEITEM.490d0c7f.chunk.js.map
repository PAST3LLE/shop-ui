{"version":3,"sources":["hooks/useDetectScrollIntoView.ts","components/SmartImg/index.tsx","hooks/useEffectRef.ts","hooks/useStateRef.ts","hooks/useOnResize.ts","components/Layout/Article.tsx","utils/index.ts","components/Carousel/index.tsx","components/LazyVideo/index.tsx","pages/SingleItem/ItemVideoContent.tsx","components/SizeSelector/index.tsx","components/Modal/index.tsx","components/LargeImageCarouselModal/index.tsx","assets/svg/shipping.svg","pages/SingleItem/AsideWithVideo.tsx","components/Breadcrumb/index.tsx","pages/SingleItem/index.tsx"],"names":["useDetectScrollIntoView","elem","options","defaultView","useState","isInView","setIsInView","useEffect","observer","IntersectionObserver","entry","isVisible","isIntersecting","unobserve","observe","disconnect","StyledPicture","styled","picture","DEFAULT_LQ_IP","quality","blur","DEFAULT_TRANSFORMATIONS","pr","BASE_INTERSECTION_OPTIONS","threshold","delay","ApiImage","ikPath","defaultPath","pathSrcSet","transformation","loadInView","lazy","lq","forwardedRef","rest","defaultRefValue","refToObserve","setRefToObserve","refToSet","useRef","useEffectRef","ref","conditionalCheck","current","undefined","root","container","document","useMemo","active","LQIP","derivedTransformations","publicKey","process","urlEndpoint","transformationPosition","src","loading","lqip","Object","entries","map","size","url","media","srcSet","SmartImg","forwardRef","props","displayName","useStateRef","defaultRef","processNode","node","setNode","useCallback","newNode","useOnResize","callback","deps","window","addEventListener","removeEventListener","BG_RATIO","BG_HEIGHT_RATIOS","extraSmall","MEDIA_WIDTHS","upToExtraSmall","small","upToSmall","medium","upToMedium","large","upToLarge","extraLarge","upToExtraLarge","portugalBg","DEFAULT_IK_TRANSFORMS","HQ","portugalBgLq","LQ","ArticleFadeInContainer","article","fromSmall","fromMedium","fromLarge","fromExtraLarge","fadeInAnimation","parser","UAParser","navigator","userAgent","type","getDevice","isMobile","getResult","CarouselStepWithoutRef","index","imageProps","buttonColor","transformAmount","parentWidth","showCarouselContentIndicators","isMultipleCarousel","onImageClick","onNext","onPrev","id","justifyContent","$transformAmount","$width","onClick","CarouselStep","Carousel","fixedHeight","imageList","mediaStartIndex","loadInViewOptions","fullSizeContent","onCarouselChange","setParentWidth","selectedStep","setSelectedStep","length","lastStepIndex","carouselContainer","setCarouselContainerRef","parentElement","offsetWidth","focus","smartImageTransformation","width","clientWidth","defaultUrl","urlRest","isLastStep","calculatedWidth","e","stopPropagation","indexToSet","VideoContainer","Row","ItemHeader","Spinner","label","itemColor","getThemeColours","ThemeModes","CHAMELEON","blue1","animation","BASE_VIDEO_PROPS","loop","muted","autoPlay","preload","trackVisibility","sourcesProps","videoProps","Loader","boxProps","dataLoaded","setDataLoaded","metaDataLoaded","setMetaDataLoaded","loaded","videoElement","setVideoElement","video","_handleDataLoad","_handleMetaDataLoad","sourceProps","ItemVideoContent","videos","currentCarouselIndex","firstPaintOver","videoStatus","setVideoStatus","handleOnPlaying","handleOnPaused","isPaused","toggleVideo","play","pause","sources","querySelector","style","marginLeft","mimeType","filter","height","variant","ButtonVariations","SECONDARY","color","fill","SquareSelectDiv","TYPE","black","GridSelect","theme","white","transparentize","SizeSelector","sizes","styleProps","DEFAULT_SIZE_SELECTED","setSize","onChange","handleSetSize","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","modalBG","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","isLargeImageModal","attrs","bg0","shadow1","css","mediaWidth","LargeImageModal","onDismiss","initialFocusRef","className","children","fadeTransition","useTransition","config","duration","from","opacity","enter","leave","useSpring","y","mass","tension","friction","set","bind","useGesture","onDrag","state","down","movement","direction","styles","item","unstable_lockFocusAcrossFrames","transform","to","tabIndex","background","position","bottom","left","right","margin","padding","textAlign","CarouselContainer","CarouselButtonContainer","LargeImageCarouselModal","dismissModal","carouselProps","Breadcrumbs","breadcrumbs","lastCrumb","rowProps","top","zIndex","crumb","isLastCrumb","ItemPage","bgColor","title","logo","navLogo","headerLogo","images","description","artistInfo","isActive","catalogView","noVideo","noDescription","showBreadCrumbs","handleMobileItemClick","setCurrentCarouselIndex","toggleModal","useToggleModal","ApplicationModal","ITEM_LARGE_IMAGE","closeModals","useCloseModals","showLargeImage","useModalOpen","useGetCatalogDetailsFromURL","params","slice","pop","useBreadcrumb","imageUrls","getImageSizeMap","setOnScreenId","useSetOnScreenItemID","innerContainerRef","setRef","DynamicInnerContainer","InnerCatalogContainer","InnerContainer","catalogLogo","STORE_IMAGE_SIZES","LARGE","marginTop","marginBottom","logoUri","$bgColor","$marginTop","alignItems","useGradient","PASTELLE_CREDIT","ShippingSvg","dangerouslySetInnerHTML","__html","SingleItem","currentProduct","useCurrentCollectionProductsFromUrl","itemIndex"],"mappings":"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","file":"static/js/SINGLEITEM.490d0c7f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nexport type LoadInView = {\n  container: Document | Element\n  conditionalCheck?: boolean\n}\nexport default function useDetectScrollIntoView(\n  elem: HTMLElement | null | undefined,\n  options: IntersectionObserverInit | undefined,\n  defaultView: boolean\n) {\n  const [isInView, setIsInView] = useState(defaultView)\n\n  useEffect(() => {\n    if (!elem || isInView) return\n\n    const observerCb: IntersectionObserverCallback = ([entry]: IntersectionObserverEntry[], observer) => {\n      if ((entry as any)?.isVisible || entry.isIntersecting) {\n        setIsInView(true)\n        observer.unobserve(elem)\n      }\n    }\n    const observer = new IntersectionObserver(observerCb, options)\n\n    // start observation of elem\n    observer.observe(elem)\n\n    // disconnect observer and close\n    return () => {\n      observer.disconnect()\n    }\n  }, [elem, options, isInView])\n\n  return isInView\n}\n","import { forwardRef, useMemo } from 'react'\nimport { IKImage, IKContext } from 'imagekitio-react'\nimport useDetectScrollIntoView, { LoadInView } from 'hooks/useDetectScrollIntoView'\nimport useEffectRef from 'hooks/useEffectRef'\nimport styled from 'styled-components/macro'\n\nexport type ImageKitTransformation = { [x: string]: undefined | number | string | boolean }[]\n\ninterface BaseImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  pathSrcSet?: { [sizekey: string | number]: string }\n  lq?: boolean\n  lazy?: boolean\n  forwardedRef?: React.ForwardedRef<any>\n  transformation?: ImageKitTransformation\n  loadInView?: LoadInView\n}\n\ntype ImagePropsWithDefaultImage = BaseImageProps & {\n  ikPath?: undefined\n  defaultPath: string\n}\n\ntype ImagePropsWithIkImage = BaseImageProps & {\n  ikPath: string\n  defaultPath?: undefined\n}\n\nexport type SmartImageProps = ImagePropsWithDefaultImage | ImagePropsWithIkImage\n\nconst StyledPicture = styled.picture`\n  height: 100%;\n`\n\nconst DEFAULT_LQ_IP = {\n  quality: 20,\n  blur: 6\n}\nconst DEFAULT_TRANSFORMATIONS = [{ pr: true }]\nconst BASE_INTERSECTION_OPTIONS = {\n  threshold: 0.1,\n  delay: 1000\n}\n\nexport function ApiImage({\n  defaultPath,\n  pathSrcSet,\n  transformation,\n  loadInView,\n  lazy,\n  lq,\n  forwardedRef\n}: ImagePropsWithDefaultImage): JSX.Element | null\nexport function ApiImage({\n  ikPath,\n  pathSrcSet,\n  transformation,\n  loadInView,\n  lazy,\n  lq,\n  forwardedRef\n}: ImagePropsWithIkImage): JSX.Element | null\nexport function ApiImage({\n  ikPath,\n  defaultPath,\n  pathSrcSet,\n  transformation = DEFAULT_TRANSFORMATIONS,\n  loadInView,\n  lazy = true,\n  lq = true,\n  forwardedRef,\n  ...rest\n}: SmartImageProps): JSX.Element | null {\n  // load if in view only!\n  const [refToSet, ref] = useEffectRef<HTMLSpanElement>(null)\n  const isInView = useDetectScrollIntoView(\n    !!loadInView?.conditionalCheck ? ref?.current : undefined,\n    {\n      ...BASE_INTERSECTION_OPTIONS,\n      root: loadInView?.container || document\n    },\n    // default view state\n    loadInView === undefined\n  )\n\n  const [LQIP, derivedTransformations] = useMemo(() => [{ ...DEFAULT_LQ_IP, active: lq }, transformation], [\n    lq,\n    transformation\n  ])\n\n  return ikPath ? (\n    <IKContext\n      publicKey={process.env.REACT_APP_IMAGEKIT_PUBLIC_KEY}\n      urlEndpoint={process.env.REACT_APP_IMAGEKIT_URL_ENDPOINT}\n      transformationPosition=\"path\"\n      // authenticationEndpoint=\"http://www.yourserver.com/auth\"\n    >\n      {/* Observable span to detect if in view */}\n      <span ref={refToSet} />\n      <IKImage\n        // path={new URL(ikPath).pathname}\n        src={!isInView ? undefined : ikPath}\n        loading={lazy ? 'lazy' : 'eager'}\n        lqip={LQIP}\n        transformation={derivedTransformations}\n        ref={forwardedRef}\n      />\n    </IKContext>\n  ) : defaultPath ? (\n    <>\n      {/* Observable span to detect if in view */}\n      <span ref={refToSet} />\n      {\n        <StyledPicture>\n          {/* e.g [500, \"shopify.com/thing_500.px\"] // [1280, \"shopify.com/thing_1280.px\"] */}\n          {pathSrcSet &&\n            Object.entries(pathSrcSet).map(([size, url]) => (\n              <source key={url} media={`(max-width: ${size}px)`} srcSet={url} />\n            ))}\n          <img src={!isInView ? undefined : defaultPath} loading=\"lazy\" ref={forwardedRef} {...rest} />\n        </StyledPicture>\n      }\n    </>\n  ) : null\n}\n\nconst SmartImg = forwardRef((props: SmartImageProps, ref) => <ApiImage {...(props as any)} forwardedRef={ref} />)\nSmartImg.displayName = 'SmartImg'\n\nexport default SmartImg\n","import { useState, useRef, useEffect, MutableRefObject } from 'react'\n\nexport default function useEffectRef<T>(defaultRefValue: any) {\n  const [refToObserve, setRefToObserve] = useState<MutableRefObject<T>>()\n  const refToSet = useRef<T>(defaultRefValue)\n  useEffect(() => {\n    setRefToObserve(refToSet)\n  }, [])\n\n  return [refToSet, refToObserve ?? null]\n}\n","import { SetStateAction, useState, useCallback } from 'react'\n\nexport default function useStateRef<T>(\n  defaultRef: T,\n  processNode: (node: any) => SetStateAction<T>\n): [T, (newNode: any) => void] {\n  const [node, setNode] = useState<T>(defaultRef)\n\n  const setRef = useCallback(\n    newNode => {\n      setNode(processNode(newNode))\n    },\n    [processNode]\n  )\n  return [node, setRef]\n}\n","import { useEffect } from 'react'\n\nexport default function useOnResize(callback: (...params: any[]) => any, ...deps: any[]) {\n  useEffect(() => {\n    window.addEventListener('resize', callback)\n\n    return () => {\n      window.removeEventListener('resize', callback)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [callback, ...deps])\n}\n","import styled from 'styled-components/macro'\nimport { fadeInAnimation } from 'pages/SingleItem/styleds'\nimport { DEFAULT_IK_TRANSFORMS } from 'constants/config'\nimport { fromExtraLarge, fromLarge, fromMedium, fromSmall } from 'theme/utils'\nimport { MEDIA_WIDTHS } from 'theme/styles/mediaQueries'\n\nconst BG_RATIO = 2.182\nconst BG_HEIGHT_RATIOS = {\n  extraSmall: MEDIA_WIDTHS.upToExtraSmall / BG_RATIO,\n  small: MEDIA_WIDTHS.upToSmall / BG_RATIO,\n  medium: MEDIA_WIDTHS.upToMedium / BG_RATIO,\n  large: MEDIA_WIDTHS.upToLarge / BG_RATIO,\n  extraLarge: MEDIA_WIDTHS.upToExtraLarge / BG_RATIO\n}\nconst portugalBg = `${process.env.REACT_APP_IMAGEKIT_URL_ENDPOINT}/portugal-bg_Rqj8jTKhFmds.jpg?tr=${DEFAULT_IK_TRANSFORMS.HQ}`\nconst portugalBgLq = `${process.env.REACT_APP_IMAGEKIT_URL_ENDPOINT}/portugal-bg_Rqj8jTKhFmds.jpg?tr=${DEFAULT_IK_TRANSFORMS.LQ},w-1,h-1`\n\nexport const ArticleFadeInContainer = styled.article`\n  overflow: hidden;\n\n  // load extra small size\n  background-image: url(${portugalBg},w-${MEDIA_WIDTHS.upToExtraSmall},h-${\n  BG_HEIGHT_RATIOS.extraSmall\n}), url(${portugalBgLq}:w-${MEDIA_WIDTHS.upToExtraSmall},h-${BG_HEIGHT_RATIOS.extraSmall});\n  // from small\n  ${fromSmall`\n    background-image: url(${portugalBg},w-${MEDIA_WIDTHS.upToSmall},h-${BG_HEIGHT_RATIOS.small}), url(${portugalBgLq}:w-${MEDIA_WIDTHS.upToSmall},h-${BG_HEIGHT_RATIOS.small});\n  `}\n  // from med\n  ${fromMedium`\n    background-image: url(${portugalBg},w-${MEDIA_WIDTHS.upToMedium},h-${BG_HEIGHT_RATIOS.medium}), url(${portugalBgLq}:w-${MEDIA_WIDTHS.upToMedium},h-${BG_HEIGHT_RATIOS.medium});\n  `}\n  // from large\n  ${fromLarge`\n    background-image: url(${portugalBg},w-${MEDIA_WIDTHS.upToLarge},h-${BG_HEIGHT_RATIOS.large}), url(${portugalBgLq}:w-${MEDIA_WIDTHS.upToLarge},h-${BG_HEIGHT_RATIOS.large});\n  `}\n  // from xl\n  ${fromExtraLarge`\n    background-image: url(${portugalBg},w-${MEDIA_WIDTHS.upToExtraLarge},h-${BG_HEIGHT_RATIOS.extraLarge}), url(${portugalBgLq}:w-${MEDIA_WIDTHS.upToExtraLarge},h-${BG_HEIGHT_RATIOS.extraLarge});\n  `}\n  \n  background-size: contain;\n  \n  // animation\n  filter: contrast(1) blur(0px);\n  ${fadeInAnimation};\n  animation-name: fadeIn;\n  animation-duration: 0.8s;\n`\n","import { UAParser } from 'ua-parser-js'\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nconst parser = new UAParser(window.navigator.userAgent)\nconst { type } = parser.getDevice()\n\nexport const userAgent = parser.getResult()\n\nexport const isMobile = type === 'mobile' || type === 'tablet'\n\nexport const isTruthy = <T>(value: T | null | undefined | false): value is T => !!value\n\nexport const delay = <T = void>(ms = 100, result?: T): Promise<T> =>\n  new Promise(resolve => setTimeout(resolve, ms, result))\n\nexport function withTimeout<T>(promise: Promise<T>, ms: number, context?: string): Promise<T> {\n  const failOnTimeout = delay(ms).then(() => {\n    const errorMessage = 'Timeout after ' + ms + ' ms'\n    throw new Error(context ? `${context}. ${errorMessage}` : errorMessage)\n  })\n\n  return Promise.race([promise, failOnTimeout])\n}\n\nexport function isPromiseFulfilled<T>(\n  promiseResult: PromiseSettledResult<T>\n): promiseResult is PromiseFulfilledResult<T> {\n  return promiseResult.status === 'fulfilled'\n}\n\n// To properly handle PromiseSettleResult which returns and object\nexport function getPromiseFulfilledValue<T, E = undefined>(\n  promiseResult: PromiseSettledResult<T>,\n  nonFulfilledReturn: E\n) {\n  return isPromiseFulfilled(promiseResult) ? promiseResult.value : nonFulfilledReturn\n}\n\nexport const registerOnWindow = (registerMapping: Record<string, any>) => {\n  Object.entries(registerMapping).forEach(([key, value]) => {\n    ;(window as any)[key] = value\n  })\n}\n\n/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n\n// shitty array \"randomiser\"\nexport function randomiseArray(arr: any[]) {\n  const randomIndex = Math.round(Math.random() * arr.length)\n\n  // 0 index, return original arr\n  if (!randomIndex) return arr\n\n  const adjustedArrEnd = arr.slice(randomIndex)\n  const adjustedArrBeg = arr.slice(0, randomIndex - 1)\n  const newFirstItem = arr[randomIndex - 1]\n\n  return [newFirstItem, ...adjustedArrBeg, ...adjustedArrEnd]\n}\n","import SmartImg, { SmartImageProps } from 'components/SmartImg'\nimport { LoadInView } from 'hooks/useDetectScrollIntoView'\nimport useOnResize from 'hooks/useOnResize'\nimport useStateRef from 'hooks/useStateRef'\nimport { useState, useMemo, /* useRef, */ useEffect, forwardRef, ForwardedRef } from 'react'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\nimport {\n  CarouselContainer,\n  CarouselStep as CarouselStepContainer,\n  CarouselButtonContainer,\n  CarouselButton\n} from './styleds'\n\nexport type GenericImageSrcSet = { defaultUrl: string } & { [sizeKey: string]: string }\nexport type CarouselProps = {\n  fixedHeight?: string\n  buttonColor: string\n  imageList: GenericImageSrcSet[]\n  transformation?: SmartImageProps['transformation']\n  mediaStartIndex: number\n  showCarouselContentIndicators?: boolean\n  loadInViewOptions?: LoadInView\n  catalogView?: boolean\n  fullSizeContent?: boolean\n  onCarouselChange?: (index: number) => void\n  onImageClick?: () => void\n}\n\ntype CarouselStepsProps = Pick<CarouselProps, 'buttonColor' | 'showCarouselContentIndicators' | 'onImageClick'> & {\n  index: number\n  imageProps: SmartImageProps\n  parentWidth: number\n  transformAmount: number\n  isMultipleCarousel: boolean\n\n  forwardedRef?: ForwardedRef<unknown>\n\n  onNext: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  onPrev: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\n\nfunction CarouselStepWithoutRef(props: CarouselStepsProps) {\n  const {\n    index,\n    imageProps,\n    buttonColor,\n    transformAmount,\n    parentWidth,\n    showCarouselContentIndicators,\n    isMultipleCarousel,\n    forwardedRef,\n    onImageClick,\n    onNext,\n    onPrev\n  } = props\n\n  return (\n    <CarouselStepContainer\n      ref={forwardedRef ?? null}\n      id={'carousel-step-' + index}\n      justifyContent=\"center\"\n      $transformAmount={transformAmount}\n      $width={parentWidth}\n    >\n      <SmartImg {...imageProps} />\n      {showCarouselContentIndicators && isMultipleCarousel && (\n        <CarouselButtonContainer onClick={onImageClick}>\n          <CarouselButton onClick={onPrev} buttonColor={buttonColor}>\n            <ChevronLeft />\n          </CarouselButton>\n          <CarouselButton onClick={onNext} buttonColor={buttonColor}>\n            <ChevronRight />\n          </CarouselButton>\n        </CarouselButtonContainer>\n      )}\n    </CarouselStepContainer>\n  )\n}\n\nconst CarouselStep = forwardRef(function CarouselStep(props: CarouselStepsProps, ref) {\n  return <CarouselStepWithoutRef {...props} forwardedRef={ref} />\n})\n\nexport default function Carousel({\n  fixedHeight,\n  buttonColor,\n  imageList,\n  transformation,\n  mediaStartIndex,\n  showCarouselContentIndicators = true,\n  loadInViewOptions,\n  fullSizeContent,\n  onCarouselChange,\n  onImageClick\n}: CarouselProps) {\n  const [parentWidth, setParentWidth] = useState<number | undefined>()\n  const [selectedStep, setSelectedStep] = useState(mediaStartIndex)\n\n  const { isMultipleCarousel, lastStepIndex } = useMemo(\n    () => ({\n      isMultipleCarousel: imageList.length > 0,\n      lastStepIndex: imageList.length - 1\n    }),\n    [imageList.length]\n  )\n\n  // ref to carousel container\n  const [carouselContainer, setCarouselContainerRef] = useStateRef<HTMLDivElement | null>(null, node => node)\n  // set carouselContainer states and focus carousel\n  useEffect(() => {\n    setParentWidth(carouselContainer?.parentElement?.offsetWidth)\n\n    carouselContainer?.focus()\n  }, [carouselContainer])\n\n  // get a carouselContainer to the carouselboi\n  // we need to hold and updated cache of the carousel parent's width in px\n  useOnResize(\n    function handleResize() {\n      setParentWidth(carouselContainer?.parentElement?.offsetWidth)\n    },\n    parentWidth,\n    carouselContainer?.parentElement?.offsetWidth\n  )\n\n  const smartImageTransformation = useMemo(\n    () => [\n      {\n        width: carouselContainer?.clientWidth,\n        pr: true\n      }\n    ],\n    [carouselContainer?.clientWidth]\n  )\n\n  return (\n    <CarouselContainer\n      id=\"#carousel-container\"\n      ref={setCarouselContainerRef}\n      fixedHeight={fixedHeight || parentWidth + 'px'}\n    >\n      {/* CAROUSEL CONTENT */}\n      {imageList.map(({ defaultUrl, ...urlRest }, index) => {\n        if (!parentWidth) return null\n        const isCurrentStep = index === selectedStep\n        // has multiple steps and is on last item\n        const isLastStep = isMultipleCarousel && selectedStep === lastStepIndex\n        const calculatedWidth = isCurrentStep ? 0 : parentWidth\n\n        const onNext = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n          e.stopPropagation()\n          let indexToSet = undefined\n          if (isLastStep) {\n            indexToSet = 0\n          } else {\n            indexToSet = selectedStep + 1\n          }\n          // change carousel slide\n          setSelectedStep(indexToSet)\n          // side effect change item video\n          onCarouselChange && onCarouselChange(indexToSet)\n        }\n\n        const onPrevious = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n          e.stopPropagation()\n          let indexToSet = undefined\n          if (selectedStep === 0) {\n            indexToSet = lastStepIndex\n          } else {\n            indexToSet = selectedStep - 1\n          }\n          // change carousel slide\n          setSelectedStep(indexToSet)\n          // side effect change item video\n          onCarouselChange && onCarouselChange(indexToSet)\n        }\n\n        return (\n          <CarouselStep\n            key={index}\n            index={index}\n            parentWidth={parentWidth}\n            transformAmount={calculatedWidth}\n            showCarouselContentIndicators={showCarouselContentIndicators}\n            isMultipleCarousel={isMultipleCarousel}\n            buttonColor={buttonColor}\n            // cbs&handlers\n            onNext={onNext}\n            onPrev={onPrevious}\n            onImageClick={onImageClick}\n            // image props\n            imageProps={{\n              defaultPath: defaultUrl,\n              pathSrcSet: fullSizeContent ? undefined : urlRest,\n              transformation: transformation || smartImageTransformation,\n              loadInView: loadInViewOptions\n            }}\n          />\n        )\n      })}\n    </CarouselContainer>\n  )\n}\n","import { ForwardedRef, forwardRef, ReactNode, useEffect, useState } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Loader from 'components/Loader'\nimport { Row } from 'components/Layout'\n\nimport useDetectScrollIntoView from 'hooks/useDetectScrollIntoView'\n\nimport { ItemHeader } from 'pages/SingleItem/styleds'\n\nimport { ThemeModes } from 'theme/styled'\nimport { getThemeColours } from 'theme/utils'\nimport { BoxProps } from 'rebass'\n\ntype WithContainer = {\n  container: HTMLElement | null | undefined\n}\n\ntype LazyVideoProps = {\n  sourcesProps: React.DetailedHTMLProps<React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>[]\n  videoProps?: React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>\n  loadInView?: boolean\n  Loader?: (...props: any[]) => JSX.Element\n} & WithContainer &\n  BoxProps\n\nconst VideoContainer = styled(Row)`\n  position: relative;\n\n  > ${ItemHeader} {\n    position: absolute;\n    right: 15%;\n    letter-spacing: -8px;\n    font-size: 7.6rem;\n  }\n\n  > svg {\n    position: absolute;\n    right: 30%;\n    z-index: 200;\n  }\n`\n\nconst Spinner = ({ label = 'pstl' }: { label?: ReactNode }) => (\n  <>\n    <ItemHeader itemColor={getThemeColours(ThemeModes.CHAMELEON).blue1} animation>\n      {label}\n    </ItemHeader>\n    <Loader size={'100px'} />\n  </>\n)\n\nconst BASE_VIDEO_PROPS = { loop: true, muted: true, autoPlay: true, preload: 'none' }\nconst BASE_INTERSECTION_OPTIONS = {\n  threshold: 0.1,\n  trackVisibility: true,\n  delay: 300\n}\n\nexport default forwardRef(function LazyVideo(\n  {\n    sourcesProps,\n    videoProps = {},\n    // useful for setting when setup is animated\n    // e.g useSprings animating components\n    // and we dont want to check if in view before animation ends\n    loadInView = true,\n    container,\n    Loader = Spinner,\n    ...boxProps\n  }: LazyVideoProps,\n  forwardRef: ForwardedRef<HTMLVideoElement>\n) {\n  const [dataLoaded, setDataLoaded] = useState(false)\n  const [metaDataLoaded, setMetaDataLoaded] = useState(false)\n  const loaded = metaDataLoaded && dataLoaded\n\n  const [videoElement, setVideoElement] = useState<HTMLVideoElement | null>(null)\n\n  // forwardedRef in use, we need to assing our internal ref to the external\n  useEffect(() => {\n    if (forwardRef && videoElement) {\n      typeof forwardRef === 'function' && forwardRef(videoElement)\n    }\n  }, [forwardRef, videoElement])\n\n  useEffect(() => {\n    const _handleDataLoad = () => setDataLoaded(true)\n    const _handleMetaDataLoad = () => setMetaDataLoaded(true)\n\n    let video: HTMLVideoElement\n    if (videoElement) {\n      video = videoElement\n\n      video.addEventListener('loadeddata', _handleDataLoad)\n      video.addEventListener('loadedmetadata', _handleMetaDataLoad)\n    }\n\n    return () => {\n      video?.removeEventListener('loadeddata', _handleDataLoad)\n      video?.removeEventListener('loadedmetadata', _handleMetaDataLoad)\n    }\n  }, [videoElement])\n\n  const isInView = useDetectScrollIntoView(\n    loadInView ? videoElement : undefined,\n    {\n      ...BASE_INTERSECTION_OPTIONS,\n      root: container\n    },\n    !loadInView\n  )\n\n  return (\n    <VideoContainer justifyContent=\"center\" {...boxProps}>\n      {!loaded && <Loader />}\n      <video {...BASE_VIDEO_PROPS} {...videoProps} ref={setVideoElement}>\n        {isInView\n          ? sourcesProps.map(({ src, ...sourceProps }, index) => <source key={index} src={src} {...sourceProps} />)\n          : null}\n      </video>\n    </VideoContainer>\n  )\n})\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { ItemSubHeader, VideoContentWrapper, VideoControlButton } from './styleds'\nimport LazyVideo from 'components/LazyVideo'\nimport { Spinner } from 'theme'\nimport { FragmentProductVideoFragment } from 'shopify/graphql/types'\nimport { ButtonVariations } from 'components/Button'\nimport { Play, Pause } from 'react-feather'\n\ninterface Params {\n  videos: FragmentProductVideoFragment[]\n  firstPaintOver?: boolean\n  currentCarouselIndex: number\n}\nconst CONTROL_BUTTON_SIZE = 12\nexport const ItemVideoContent = ({ videos, currentCarouselIndex, firstPaintOver }: Params) => {\n  const [videoStatus, setVideoStatus] = useState<'PLAYING' | 'PAUSED' | undefined>(undefined)\n  const [videoElement, setVideoElement] = useState<HTMLVideoElement | null>(null)\n\n  useEffect(() => {\n    if (!videoElement) return\n\n    function handleOnPlaying() {\n      setVideoStatus('PLAYING')\n    }\n\n    function handleOnPaused() {\n      setVideoStatus('PAUSED')\n    }\n\n    videoElement.addEventListener('playing', handleOnPlaying)\n    videoElement.addEventListener('pause', handleOnPaused)\n\n    return () => {\n      videoElement.removeEventListener('playing', handleOnPlaying)\n      videoElement.removeEventListener('pause', handleOnPaused)\n    }\n  }, [videoElement])\n\n  const isPaused = videoStatus === 'PAUSED'\n\n  const toggleVideo = useCallback(() => {\n    if (!videoElement) return\n\n    if (isPaused) {\n      videoElement.play()\n    } else {\n      videoElement.pause()\n    }\n  }, [isPaused, videoElement])\n\n  return (\n    <>\n      <VideoContentWrapper id=\"#video-content-wrapper\">\n        {videos.map(({ id, sources }, index) => {\n          const isSelected = index === currentCarouselIndex\n          if (!isSelected) return null\n\n          return (\n            <LazyVideo\n              key={id}\n              ref={setVideoElement}\n              container={document.querySelector('#CATALOG-ARTICLE') as HTMLElement}\n              loadInView={firstPaintOver}\n              videoProps={{\n                style: {\n                  marginLeft: 'auto'\n                }\n              }}\n              sourcesProps={sources\n                .map(({ url, mimeType }) => ({ src: url, type: mimeType }))\n                .filter(({ type }) => type === 'video/mp4')}\n              height=\"100%\"\n              Loader={Spinner}\n              onClick={toggleVideo}\n            />\n          )\n        })}\n      </VideoContentWrapper>\n      {videoStatus && (\n        <VideoControlButton variant={ButtonVariations.SECONDARY} onClick={toggleVideo}>\n          <ItemSubHeader>\n            {isPaused ? (\n              <Play color=\"ghostwhite\" fill=\"ghostwhite\" size={CONTROL_BUTTON_SIZE} />\n            ) : (\n              <Pause color=\"ghostwhite\" fill=\"ghostwhite\" size={CONTROL_BUTTON_SIZE} />\n            )}\n          </ItemSubHeader>\n        </VideoControlButton>\n      )}\n    </>\n  )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { transparentize } from 'polished'\nimport { ProductSizes } from 'shopify/graphql/types'\nimport { DEFAULT_SIZE_SELECTED } from 'constants/config'\nimport { Row, RowProps } from 'components/Layout'\nimport { TYPE } from 'theme'\n\ntype SizeSelectorProps = Omit<RowProps, 'sizes'> & {\n  sizes: ProductSizes[]\n  color?: string\n}\n\nconst SquareSelectDiv = styled(TYPE.black)``\nconst GridSelect = styled(Row)<Pick<SizeSelectorProps, 'color'>>`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  gap: 1px;\n  padding: 1px;\n\n  width: 100%;\n\n  > ${SquareSelectDiv} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    background-color: #fff;\n    padding: 10px 20px;\n    text-align: center;\n    font-size: 2rem;\n    font-weight: 400;\n\n    height: 50px;\n    flex: 1 1 24%;\n\n    &:hover {\n      background-color: ${({ theme, color = theme.white }) => transparentize(0.7, color)};\n    }\n\n    transition: background-color 0.3s ease-out;\n  }\n`\n\nexport default function SizeSelector({ sizes, ...styleProps }: SizeSelectorProps) {\n  const [, setSize] = useState<ProductSizes>(DEFAULT_SIZE_SELECTED)\n  const handleSetSize = (size: ProductSizes) => setSize(size)\n\n  return (\n    <GridSelect {...styleProps}>\n      {sizes.map((size, index) => (\n        <SquareSelectDiv key={size + '_' + index} onChange={() => handleSetSize(size)}>\n          {size}\n        </SquareSelectDiv>\n      ))}\n    </GridSelect>\n  )\n}\n","import { DialogContent, DialogOverlay } from '@reach/dialog'\nimport { transparentize } from 'polished'\nimport { animated, useSpring, useTransition } from 'react-spring'\nimport { useGesture } from '@use-gesture/react'\nimport styled, { css } from 'styled-components/macro'\nimport { isMobile } from 'utils'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 9999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.modalBG};\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, isLargeImageModal, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: auto;\n\n  overflow: hidden;\n  border: none;\n\n  &[data-reach-dialog-content] {\n    outline: none;\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.bg0};\n    box-shadow: 0px 4px 8px 0px ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0px;\n    width: ${({ isLargeImageModal }) => (isLargeImageModal ? '90' : '50')}vh;\n    overflow-y: ${({ isLargeImageModal }) => (!isLargeImageModal ? 'auto' : 'hidden')};\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: ${({ maxHeight, isLargeImageModal = false }) =>\n      css`\n        ${isLargeImageModal ? maxHeight + 'vh' : '420px'}\n      `};\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 90vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    // height: 90vh;\n\n    border-radius: 20px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    margin: auto;\n\n    img {\n      max-width: 180%;\n      margin: auto;\n    }\n    // TODO: remove\n    ${mobile &&\n      css`\n        width: 100vw;\n        height: 90vh;\n\n        border-radius: 20px;\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n        margin: auto;\n\n        img {\n          max-width: 150%;\n        }\n      `}\n  `}\n  }\n`\n\ninterface ModalProps {\n  isLargeImageModal?: boolean\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  className?: string\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isLargeImageModal = false,\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  initialFocusRef,\n  className,\n  children\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      })\n      if (state.movement[1] > 150 || (state.direction[1] > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    }\n  })\n\n  return (\n    <>\n      {fadeTransition(\n        (styles, item) =>\n          item && (\n            <StyledDialogOverlay\n              className={className}\n              style={styles}\n              onDismiss={onDismiss}\n              initialFocusRef={initialFocusRef}\n              unstable_lockFocusAcrossFrames={false}\n            >\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                      style: { transform: y.to(y => `translateY(${(y as number) > 0 ? y : 0}px)`) }\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n                isLargeImageModal={isLargeImageModal}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n              {isMobile && (\n                <h1\n                  onClick={onDismiss}\n                  style={{\n                    background: '#AB92E1',\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    margin: 10,\n                    padding: '5px 10px',\n                    textAlign: 'right'\n                  }}\n                >\n                  CLOSE\n                </h1>\n              )}\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","import Carousel, { CarouselProps } from 'components/Carousel'\nimport { CarouselContainer, CarouselStep, CarouselButtonContainer } from 'components/Carousel/styleds'\nimport Modal from 'components/Modal'\nimport styled from 'styled-components/macro'\nimport { upToSmall } from 'theme/utils'\n\nconst LargeImageModal = styled(Modal)`\n  ${upToSmall`\n  ${CarouselContainer}{\n    height: 90%;\n    margin: auto 0 0 0;\n    ${CarouselStep} {\n      // let user scroll\n      overflow: auto;\n      > ${CarouselButtonContainer} {\n        display: none;\n      }\n    }}\n  `}\n`\n\ninterface LargeImageCarouselModalProps extends CarouselProps {\n  isOpen: boolean\n  dismissModal: () => void\n  toggleModal: () => void\n}\nexport default function LargeImageCarouselModal(props: LargeImageCarouselModalProps) {\n  const { isOpen, dismissModal, ...carouselProps } = props\n  return (\n    <LargeImageModal isOpen={isOpen} onDismiss={dismissModal} isLargeImageModal>\n      <Carousel {...carouselProps} fullSizeContent />\n    </LargeImageModal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/shipping.227664ba.svg\";","import { useEffect, useMemo, useState } from 'react'\nimport { Row } from 'components/Layout'\nimport Carousel from 'components/Carousel'\nimport {\n  ItemContainer,\n  ItemAsidePanel,\n  ItemLogo,\n  ItemDescription,\n  ItemCredits,\n  ItemArtistInfo,\n  PASTELLE_CREDIT,\n  ItemSubHeader,\n  ItemBreadcrumb,\n  MobileItemCTA,\n  InnerContainer,\n  HighlightedText,\n  ItemLogoCatalogView,\n  InnerCatalogContainer,\n  ItemContentContainer,\n  SubItemDescription\n} from './styleds'\n\nimport { useBreadcrumb } from 'components/Breadcrumb'\n\nimport { useToggleModal, useModalOpen, useCloseModals } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport { ItemVideoContent } from './ItemVideoContent'\nimport { ScrollableContentComponentBaseProps } from 'components/ScrollingContentPage'\nimport { BoxProps } from 'rebass'\nimport SmartImg from 'components/SmartImg'\nimport { useSetOnScreenItemID } from 'state/user/hooks'\nimport {\n  FragmentProductVideoFragment,\n  FragmentProductImageFragment,\n  ProductSizes,\n  ProductArtistInfo\n} from 'shopify/graphql/types'\nimport useStateRef from 'hooks/useStateRef'\nimport SizeSelector from 'components/SizeSelector'\nimport { STORE_IMAGE_SIZES } from 'constants/config'\nimport { getImageSizeMap } from 'shopify/utils'\nimport LargeImageCarouselModal from 'components/LargeImageCarouselModal'\nimport ShippingSvg from 'assets/svg/shipping.svg'\n\nexport interface ProductPageProps {\n  bgColor: string\n  color: string\n  title: string\n  logo?: string\n  headerLogo?: string\n  navLogo?: string\n  images: FragmentProductImageFragment[]\n  videos: FragmentProductVideoFragment[]\n  // media: (FragmentProductExternalVideoFragment | FragmentProductVideoFragment)[]\n  sizes: ProductSizes[]\n  description: string\n  artistInfo?: ProductArtistInfo\n  id: string\n  catalogView?: boolean\n  noVideo?: boolean\n  noDescription?: boolean\n}\n\nexport type ItemPageDesignsProps = {\n  headerLogo?: string\n  navLogo?: string\n}\n\nfunction Breadcrumbs({\n  breadcrumbs,\n  lastCrumb,\n  ...rowProps\n}: {\n  breadcrumbs: string[]\n  lastCrumb: string | undefined\n} & BoxProps) {\n  return (\n    <Row {...rowProps} style={{ position: 'absolute', top: 0, left: 0, margin: 5, zIndex: 100 }}>\n      {breadcrumbs?.map((crumb, index) => {\n        const isLastCrumb = crumb === lastCrumb\n        return (\n          <ItemBreadcrumb key={crumb + '_' + index} to=\"/#\">\n            <span>{!isLastCrumb ? crumb : <strong>{crumb}</strong>}</span>\n            {!isLastCrumb && <span>{'//'}</span>}\n          </ItemBreadcrumb>\n        )\n      })}\n    </Row>\n  )\n}\n\nconst DEFAULT_MEDIA_START_INDEX = 0\n\nexport default function ItemPage({\n  bgColor,\n  color = '#000',\n  title,\n  logo,\n  navLogo,\n  headerLogo,\n  images = [],\n  videos = [],\n  // media,\n  sizes = [],\n  description,\n  artistInfo,\n  // TODO: re-enable id\n  // id,\n  isActive,\n  firstPaintOver,\n  loadInView,\n  catalogView = false,\n  noVideo = false,\n  noDescription = false,\n  showBreadCrumbs,\n  style,\n  handleMobileItemClick\n}: ProductPageProps &\n  ScrollableContentComponentBaseProps & {\n    style?: any\n    handleMobileItemClick?: React.MouseEventHandler<HTMLHeadingElement>\n    showBreadCrumbs: boolean\n  }) {\n  const [currentCarouselIndex, setCurrentCarouselIndex] = useState(DEFAULT_MEDIA_START_INDEX)\n  const onCarouselChange = (index: number) => setCurrentCarouselIndex(index)\n\n  // MODALS\n  const toggleModal = useToggleModal(ApplicationModal.ITEM_LARGE_IMAGE)\n  const closeModals = useCloseModals()\n  const showLargeImage = useModalOpen(ApplicationModal.ITEM_LARGE_IMAGE)\n\n  /// BREADCRUMBS\n  const breadcrumbs = useBreadcrumb()\n\n  // IMAGES\n  const imageUrls = getImageSizeMap(images)\n\n  /**\n   * SIDE EFFECTS\n   */\n  // 1. scrolling page current index set in state as on screen\n  const setOnScreenId = useSetOnScreenItemID()\n  useEffect(() => {\n    if (isActive) {\n      // TODO: use id\n      setOnScreenId(title)\n    }\n  }, [isActive, title, setOnScreenId])\n\n  // inner container ref\n  const [innerContainerRef, setRef] = useStateRef<HTMLDivElement | null>(null, node => node)\n\n  const DynamicInnerContainer = useMemo(() => (catalogView ? InnerCatalogContainer : InnerContainer), [catalogView])\n\n  // catalog display logo to use\n  const catalogLogo = navLogo || headerLogo\n\n  return (\n    <>\n      {/* Large images */}\n      <LargeImageCarouselModal\n        isOpen={isActive && showLargeImage}\n        toggleModal={toggleModal}\n        dismissModal={closeModals}\n        // Carousel props\n        buttonColor={color}\n        imageList={imageUrls}\n        transformation={[\n          {\n            width: images[0]?.width || STORE_IMAGE_SIZES.LARGE,\n            height: images[0]?.height || STORE_IMAGE_SIZES.LARGE /* , xc: 500, yc: 500 */\n          }\n        ]}\n        mediaStartIndex={currentCarouselIndex}\n        onCarouselChange={onCarouselChange}\n      />\n      {/* Item content */}\n      <ItemContainer id=\"#item-container\" style={style} catalogView={catalogView} bgColor={bgColor}>\n        <ItemAsidePanel id=\"#item-aside-panel\">\n          <DynamicInnerContainer ref={setRef}>\n            {/* Breadcrumbs */}\n            {showBreadCrumbs && (\n              <Breadcrumbs {...breadcrumbs} marginTop={'5px'} marginLeft={'5px'} marginBottom={-25} />\n            )}\n            {/* Item carousel */}\n            <Carousel\n              showCarouselContentIndicators={!catalogView}\n              buttonColor={color}\n              imageList={imageUrls}\n              mediaStartIndex={currentCarouselIndex}\n              onCarouselChange={onCarouselChange}\n              onImageClick={toggleModal}\n              loadInViewOptions={loadInView}\n              catalogView={catalogView}\n              fixedHeight={catalogView ? '100%' : undefined}\n            />\n\n            {/* Wrap everything else in a fragment */}\n            {noDescription ? null : catalogView ? (\n              <>\n                {catalogLogo ? (\n                  <ItemLogoCatalogView logoUri={catalogLogo} $bgColor=\"ghostwhite\" />\n                ) : (\n                  <ItemLogo\n                    $marginTop={\n                      innerContainerRef?.clientWidth ? `calc(${innerContainerRef?.clientWidth}px / -7)` : undefined\n                    }\n                  >\n                    {title}\n                  </ItemLogo>\n                )}\n                <MobileItemCTA\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  onClick={handleMobileItemClick && handleMobileItemClick}\n                >\n                  <strong style={{ marginLeft: 7 }}> VIEW MORE</strong>\n                </MobileItemCTA>\n              </>\n            ) : (\n              <>\n                <ItemLogo>\n                  {logo ? (\n                    <SmartImg\n                      ikPath={logo}\n                      transformation={[{ width: innerContainerRef?.clientWidth, quality: 100, pr: true }]}\n                      loading=\"lazy\"\n                      lq\n                    />\n                  ) : (\n                    title\n                  )}\n                </ItemLogo>\n\n                {/* ITEM CONTENT: description, credits, etc */}\n                <ItemContentContainer padding=\"0 0 3rem\">\n                  {/* Credits */}\n                  <ItemSubHeader useGradient bgColor={color} label=\"CREDIT\" margin=\"0 0 2rem\" />\n                  <ItemContentContainer padding={'0 3rem'}>\n                    <ItemCredits>\n                      {artistInfo ? (\n                        <ItemArtistInfo {...artistInfo} bgColor={color} />\n                      ) : (\n                        <HighlightedText bgColor={color}>{PASTELLE_CREDIT}</HighlightedText>\n                      )}\n                    </ItemCredits>\n                  </ItemContentContainer>\n\n                  {/* Size selector */}\n                  <ItemSubHeader useGradient bgColor={color} label=\"CHOOSE SIZE + VIEW LIVE\" />\n                  <ItemContentContainer margin=\"20px 0\" padding={'0 3rem'}>\n                    <SubItemDescription>SELECT A SIZE BELOW TO SEE IT ON THE MODEL</SubItemDescription>\n                    <SizeSelector sizes={sizes} color={bgColor} margin=\"20px 0\" />\n\n                    <SubItemDescription>\n                      **Showcase is meant to help you see what your merch in the selected size looks like on an actual\n                      person similar to your size.\n                      <br />\n                      <br />\n                      Compare that to using some dumb fucking sizing chart that never works, AND requires measuring tape\n                      that literally zero people on this planet own.\n                    </SubItemDescription>\n\n                    <SubItemDescription>\n                      <img src={ShippingSvg} /> FREE SHIPPING OVER 200€\n                    </SubItemDescription>\n                  </ItemContentContainer>\n\n                  {/* Item description */}\n                  <ItemSubHeader useGradient bgColor={color} label=\"INFO + CARE INSTRUCTIONS\" />\n                  <ItemContentContainer padding={'0 3rem'}>\n                    <ItemDescription dangerouslySetInnerHTML={{ __html: description }}></ItemDescription>\n                  </ItemContentContainer>\n                </ItemContentContainer>\n              </>\n            )}\n          </DynamicInnerContainer>\n        </ItemAsidePanel>\n        {noVideo || catalogView ? null : (\n          <ItemVideoContent\n            firstPaintOver={firstPaintOver}\n            videos={videos}\n            currentCarouselIndex={currentCarouselIndex}\n          />\n        )}\n      </ItemContainer>\n    </>\n  )\n}\n","import { useGetCatalogDetailsFromURL } from 'pages/Catalog/hooks'\n\nexport function useBreadcrumb() {\n  const [, params] = useGetCatalogDetailsFromURL()\n\n  const lastCrumb = params.slice().pop()\n  return { breadcrumbs: params, lastCrumb }\n}\n","import { ArticleFadeInContainer } from 'components/Layout/Article'\nimport { useCurrentCollectionProductsFromUrl } from 'pages/Catalog/hooks'\nimport AsideWithVideo from './AsideWithVideo'\n\nexport default function SingleItem() {\n  // get catalog item from data and url\n  const { currentProduct } = useCurrentCollectionProductsFromUrl()\n\n  return (\n    <ArticleFadeInContainer id=\"CATALOG-ARTICLE\">\n      <AsideWithVideo {...currentProduct} firstPaintOver isActive itemIndex={0} showBreadCrumbs />\n    </ArticleFadeInContainer>\n  )\n}\n"],"sourceRoot":""}